{"version":3,"file":"audio-player.service.js","sourceRoot":"","sources":["../../../../../projects/ngx-audio-player/src/lib/service/audio-player-service/audio-player.service.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,eAAe,EAAc,MAAM,MAAM,CAAC;AAMnD,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;IAA/B;QAEE,6BAA6B;QAC7B,WAAM,GAAY,EAAE,CAAC;QACrB,qBAAgB,GACd,IAAI,eAAe,CAAU,IAAI,CAAC,MAAM,CAAC,CAAC;QAE5C,wBAAwB;QACxB,iBAAY,GAAU,IAAI,CAAC;QAC3B,yBAAoB,GAClB,IAAI,eAAe,CAAQ,IAAI,CAAC,YAAY,CAAC,CAAC;QAEhD,uBAAuB;QACvB,gBAAW,GAAQ,IAAI,CAAC;QACxB,wBAAmB,GACjB,IAAI,eAAe,CAAM,IAAI,CAAC,WAAW,CAAC,CAAC;IA6B/C,CAAC;IA3BC,WAAW,CAAC,MAAe;QACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC1C,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC;IAC9C,CAAC;IAED,eAAe,CAAC,YAAmB;QACjC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACpD,CAAC;IAED,eAAe;QACb,OAAO,IAAI,CAAC,oBAAoB,CAAC,YAAY,EAAE,CAAC;IAClD,CAAC;IAED,cAAc,CAAC,WAAgB;QAC7B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAClD,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC;IACjD,CAAC;CAEF,CAAA;AA5CY,kBAAkB;IAH9B,UAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,kBAAkB,CA4C9B;SA5CY,kBAAkB","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Track } from '../../model/track.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AudioPlayerService {\r\n\r\n  // Dynamic update of playlist\r\n  tracks: Track[] = [];\r\n  playlistSubject$: BehaviorSubject<Track[]> =\r\n    new BehaviorSubject<Track[]>(this.tracks);\r\n\r\n  // Get the current track\r\n  currentTrack: Track = null;\r\n  currentTrackSubject$: BehaviorSubject<Track> =\r\n    new BehaviorSubject<Track>(this.currentTrack);\r\n\r\n  // Get the current time\r\n  currentTime: any = null;\r\n  currentTimeSubject$: BehaviorSubject<any> =\r\n    new BehaviorSubject<any>(this.currentTime);\r\n\r\n  setPlaylist(tracks: Track[]) {\r\n    this.tracks = tracks;\r\n    this.playlistSubject$.next(this.tracks);\r\n  }\r\n\r\n  getPlaylist(): Observable<Track[]> {\r\n    return this.playlistSubject$.asObservable();\r\n  }\r\n\r\n  setCurrentTrack(currentTrack: Track) {\r\n    this.currentTrack = currentTrack;\r\n    this.currentTrackSubject$.next(this.currentTrack);\r\n  }\r\n\r\n  getCurrentTrack(): Observable<Track> {\r\n    return this.currentTrackSubject$.asObservable();\r\n  }\r\n\r\n  setCurrentTime(currentTime: any) {\r\n    this.currentTime = currentTime;\r\n    this.currentTimeSubject$.next(this.currentTime);\r\n  }\r\n\r\n  getCurrentTime(): Observable<any> {\r\n    return this.currentTimeSubject$.asObservable();\r\n  }\r\n\r\n}\r\n"]}